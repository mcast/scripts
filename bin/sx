#! /bin/sh

set -e
XDISPFN="/tmp/$USER.x11"

show_help() {
    printf 'Syntax: %s\n
Run "screen -x" after updating the $DISPLAY
stashed in %s .\n
To install, add the following line to ~/.bashrc
  eval "$( sx --setup )"
\n' "$0" "$XDISPFN"
}


save_DISPLAY() {
    if [ -n "$DISPLAY" ]; then
	TMPFN="$( mktemp )"
	echo "$DISPLAY" >> "$TMPFN"
	mv --no-target-directory "$TMPFN" "$XDISPFN"
	unset TMPFN
    fi
}

load_DISPLAY() {
    if [ -f "$XDISPFN" ] && [ -O "$XDISPFN" ]; then
	_disp="$( cat "$XDISPFN" )"
	if [ -n "$_disp" ] && [ "$_disp" != "$DISPLAY" ]; then
	    printf ' export DISPLAY="%s"; echo "DISPLAY changed (was %s, now %s)"\n' \
		   "$_disp" "${DISPLAY:-''}" "$_disp"
	fi
    fi
}

no_screen_sockets() {
    screen -ls | grep -q 'No Sockets found'
}

do_connect() {
    if no_screen_sockets; then
	uptime
	if [ -z "$SSH_AUTH_SOCK" ]; then
	    printf "\n\e[35m [no ssh-agent - will start one]\e[00m\n"
	    pfx=ssh-agent
	else
	    pfx=
	fi
	printf "\e[35m *** Starting new screen session *** \e[00m\n"
	do_setup_pre
	# below: messy, possibly fragile, no tests
	( $pfx screen -Dm ) &
	echo screen -Dm: pid is $!
	while no_screen_sockets; do
	    echo -n .
	    sleep 1
	done
	echo
#	ps xf
	printf "\n[ press enter ]"
	read _ignore
	echo
    fi
    exec screen -x
}

do_setup_pre() {
    if [ $( hostname -s ) = 'cgp-login' ]; then
	cd ~/mail
    fi
}


main() {
    case "$1" in
	--setup)
	    # Called from .bashrc with
	    #   eval "$( sx --setup )"
	    if [ "$TERM" = 'screen' ]; then
		if which screen >/dev/null; then
		    printf " PROMPT_COMMAND='eval \"\$( sx --tell )\"'\n"
		else
		    echo "  * Found no screen(1) here" >&2
		fi
	    fi
	    ;;
	--tell)
	    # Called per prompt
	    load_DISPLAY
	    ;;
	"")
	    save_DISPLAY
	    do_connect
	    ;;
	-h | --help)
	    show_help
	    ;;
	*)
	    echo "Bad options $@" >&2
	    exit 4
    esac
}

main "$@"
